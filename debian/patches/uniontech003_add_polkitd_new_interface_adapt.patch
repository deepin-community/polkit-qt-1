From 008ad73dec854f590451bfe3ef794f83bddfb666 Mon Sep 17 00:00:00 2001
From: xzl <xiangzelong@deepin.org>
Date: Wed, 21 May 2025 14:42:53 +0800
Subject: [PATCH 1/1] add polkit session details for deepin

it used by dde-polkit-agent to get the authentication status and auth info.
---
 agent/polkitqt1-agent-session.cpp | 71 ++++++++++++++++++++++++++++++-
 agent/polkitqt1-agent-session.h   | 20 ++++++++-
 core/polkitqt1-details.cpp        |  5 +++
 core/polkitqt1-details.h          |  3 ++
 4 files changed, 96 insertions(+), 3 deletions(-)

diff --git a/agent/polkitqt1-agent-session.cpp b/agent/polkitqt1-agent-session.cpp
index e70ace0..167a41d 100644
--- a/agent/polkitqt1-agent-session.cpp
+++ b/agent/polkitqt1-agent-session.cpp
@@ -10,6 +10,9 @@
 #include <QDebug>
 
 #include "polkitqt1-identity.h"
+#include <QList>
+#include <QStringList>
+#include <QString>
 
 #define POLKIT_AGENT_I_KNOW_API_IS_SUBJECT_TO_CHANGE 1
 #include <polkitagent/polkitagent.h>
@@ -26,6 +29,10 @@ public:
     static void request(PolkitAgentSession *s, gchar *request, gboolean echo_on, gpointer user_data);
     static void showError(PolkitAgentSession *s, gchar *text, gpointer user_data);
     static void showInfo(PolkitAgentSession *s, gchar *text, gpointer user_data);
+    static void exAuthStatus(PolkitAgentSession *s, int statusCode,
+                             int authFlags, gchar *msg, gpointer user_data);
+    static void exAuthInfo(PolkitAgentSession *s, int isMfa, gchar *authTypes,
+                           gpointer user_data);
 
     AsyncResult *result;
     PolkitAgentSession *polkitAgentSession;
@@ -36,16 +43,30 @@ Session::Private::~Private()
     // polkitAgentSession is freed in Session d'tor
 }
 
-Session::Session(const PolkitQt1::Identity &identity, const QString &cookie, AsyncResult *result, QObject *parent)
+Session::Session(const PolkitQt1::Identity &identity, const QString &cookie, AsyncResult *result, QObject *parent, const PolkitQt1::Details *details)
         : QObject(parent)
         , d(new Private)
 {
     d->result = result;
-    d->polkitAgentSession = polkit_agent_session_new(identity.identity(), cookie.toUtf8().data());
+
+    if (details)
+    {
+        d->polkitAgentSession = polkit_agent_session_new_ex(
+            identity.identity(), cookie.toUtf8().data(), details->details());
+    }
+    else
+    {
+        d->polkitAgentSession =
+            polkit_agent_session_new(identity.identity(), cookie.toUtf8().data());
+    }
+
     g_signal_connect(G_OBJECT(d->polkitAgentSession), "completed", G_CALLBACK(Private::completed), this);
     g_signal_connect(G_OBJECT(d->polkitAgentSession), "request", G_CALLBACK(Private::request), this);
     g_signal_connect(G_OBJECT(d->polkitAgentSession), "show-error", G_CALLBACK(Private::showError), this);
     g_signal_connect(G_OBJECT(d->polkitAgentSession), "show-info", G_CALLBACK(Private::showInfo), this);
+    g_signal_connect(G_OBJECT(d->polkitAgentSession), "show-info", G_CALLBACK(Private::showInfo), this);
+    g_signal_connect(G_OBJECT(d->polkitAgentSession), "status", G_CALLBACK(Private::exAuthStatus), this);
+    g_signal_connect(G_OBJECT(d->polkitAgentSession), "auth-info", G_CALLBACK(Private::exAuthInfo), this);
 }
 
 Session::Session(PolkitAgentSession *pkAgentSession, QObject *parent)
@@ -60,6 +81,10 @@ Session::Session(PolkitAgentSession *pkAgentSession, QObject *parent)
     g_signal_connect(G_OBJECT(d->polkitAgentSession), "request", G_CALLBACK(Private::request), this);
     g_signal_connect(G_OBJECT(d->polkitAgentSession), "show-error", G_CALLBACK(Private::showError), this);
     g_signal_connect(G_OBJECT(d->polkitAgentSession), "show-info", G_CALLBACK(Private::showInfo), this);
+    g_signal_connect(G_OBJECT(d->polkitAgentSession), "status",
+                     G_CALLBACK(Private::exAuthStatus), this);
+    g_signal_connect(G_OBJECT(d->polkitAgentSession), "auth-info",
+                     G_CALLBACK(Private::exAuthInfo), this);
 }
 
 Session::~Session()
@@ -80,6 +105,18 @@ void Session::setResponse(const QString &response)
     polkit_agent_session_response(d->polkitAgentSession, response.toUtf8().data());
 }
 
+void Session::setResponseEx(int authFlags, const QString &response)
+{
+    polkit_agent_session_response_ex(d->polkitAgentSession, authFlags,
+                                     response.toUtf8().data());
+}
+
+void Session::authCtrl(auth_ctrl_t ctrl, int authFlags)
+{
+    polkit_agent_session_ctrl(d->polkitAgentSession, authFlags,
+                              session_ctrl_t(ctrl));
+}
+
 void Session::cancel()
 {
     polkit_agent_session_cancel(d->polkitAgentSession);
@@ -118,6 +155,36 @@ void Session::Private::showInfo(PolkitAgentSession *s, gchar *text, gpointer use
     qDebug() << "showInfo";
     Q_EMIT((Session *)user_data)->showInfo(QString::fromUtf8(text));
 }
+void Session::Private::exAuthStatus(PolkitAgentSession *s, int statusCode,
+                                    int authFlags, gchar *msg,
+                                    gpointer user_data)
+{
+    qDebug() << "exAuthStatus";
+
+    Q_EMIT((Session *)user_data)
+        ->exAuthStatus(statusCode, authFlags, QString::fromUtf8(msg));
+}
+
+void Session::Private::exAuthInfo(PolkitAgentSession *s, int isMfa,
+                                  gchar *authTypes, gpointer user_data)
+{
+    qDebug() << "exAuthInfo";
+    QString strAuthTypes = QString::fromUtf8(authTypes);
+
+    QStringList strListAuthTypes =
+        strAuthTypes.split(QChar(','), Qt::SkipEmptyParts);
+
+    QList<int> intAuthTypes;
+    QList<QString>::iterator it = strListAuthTypes.begin();
+    for (; it != strListAuthTypes.end(); it++)
+    {
+        intAuthTypes.append((*it).toInt());
+    }
+
+    qDebug() << intAuthTypes;
+
+    Q_EMIT((Session *)user_data)->exAuthInfo(isMfa, intAuthTypes);
+}
 
 //
 
diff --git a/agent/polkitqt1-agent-session.h b/agent/polkitqt1-agent-session.h
index 42b30e8..b404e74 100644
--- a/agent/polkitqt1-agent-session.h
+++ b/agent/polkitqt1-agent-session.h
@@ -9,9 +9,13 @@
 #define POLKITQT1_AGENT_SESSION_H
 
 #include <QObject>
+#include <QList>
+#include "polkitqt1-details.h"
 #include "polkitqt1-identity.h"
 #include "polkitqt1-agent-export.h"
 
+typedef enum { AUTH_START = 1, AUTH_CLOSE } auth_ctrl_t;
+
 typedef struct _GSimpleAsyncResult GSimpleAsyncResult;
 typedef struct _PolkitAgentSession PolkitAgentSession;
 
@@ -78,7 +82,7 @@ public:
      * \param result Result of the authentication action. Must be finished using complete() method.
      * \param parent
      */
-    Session(const PolkitQt1::Identity& identity, const QString &cookie, AsyncResult *result = nullptr, QObject *parent = nullptr);
+    Session(const PolkitQt1::Identity& identity, const QString &cookie, AsyncResult *result = nullptr, QObject *parent = nullptr, const PolkitQt1::Details *details = 0 );
 
     /**
      * Create a new authentication session from PolkitAgentSession object
@@ -109,6 +113,15 @@ public:
      */
     void setResponse(const QString &response);
 
+    void setResponseEx(int authFlags, const QString &response);
+
+    /**
+     * control the authentication
+     *
+     * \param ctrl the control flag.
+     */
+    void authCtrl(auth_ctrl_t ctrl, int authFlags);
+
     /**
      * Cancel the authentication session.
      * This will emit the completed() signal.
@@ -156,6 +169,11 @@ Q_SIGNALS:
      */
     void showInfo(const QString &text);
 
+    void exAuthStatus(int statusCode, int authType, const QString &msg);
+
+    void exAuthInfo(bool isMfa, QList<int> &authTypes);
+
+
 private:
     class Private;
     Private * const d;
diff --git a/core/polkitqt1-details.cpp b/core/polkitqt1-details.cpp
index b5be7ee..7bf0ed7 100644
--- a/core/polkitqt1-details.cpp
+++ b/core/polkitqt1-details.cpp
@@ -91,4 +91,9 @@ QStringList Details::keys() const
     return list;
 }
 
+PolkitDetails *Details::details() const
+{
+    return d->polkitDetails;
+}
+
 }
diff --git a/core/polkitqt1-details.h b/core/polkitqt1-details.h
index 59dfcb6..3e033ab 100644
--- a/core/polkitqt1-details.h
+++ b/core/polkitqt1-details.h
@@ -79,6 +79,9 @@ public:
      * \return List of all keys.
      */
     QStringList keys() const;
+
+    PolkitDetails *details() const;
+
 private:
     class Data;
     QExplicitlySharedDataPointer< Data > d;
-- 
2.47.2
